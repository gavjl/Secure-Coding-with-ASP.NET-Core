// <auto-generated />
using System;
using Globomantics.Survey.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Globomantics.Survey.Migrations.GlobomanticsSurveyDb
{
    [DbContext(typeof(GlobomanticsSurveyDbContext))]
    partial class GlobomanticsSurveyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Globomantics.Survey.Areas.Identity.Data.GloboSurveyUserTicket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GloboSurveyUserTickets");
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurvey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("SurveyCompleteMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CustomerSurveys");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900"),
                            SurveyCompleteMessage = "You completed the survey, THANKS!!!",
                            Title = "Staff Survey - Carved Rock"
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurveyResponse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CustomerSurveyResponses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8647f5bb-cfd4-40ed-bcda-b60e7b4ca60c"),
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        },
                        new
                        {
                            Id = new Guid("5e18547a-dd7b-444a-afb9-87431a1b4db1"),
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SurveyResponseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SurveyResponseId");

                    b.ToTable("SurveyAnswer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("521058ad-2bb9-481d-b9fb-9f78ef16a85a"),
                            Answer = "Less than 1 year",
                            Question = "How long have you worked at Carved Rock?",
                            SurveyResponseId = new Guid("8647f5bb-cfd4-40ed-bcda-b60e7b4ca60c")
                        },
                        new
                        {
                            Id = new Guid("44eddc36-cba7-495c-b709-aae1371d9c8a"),
                            Answer = "Yes",
                            Question = "Do you enjoy working at Carved Rock?",
                            SurveyResponseId = new Guid("8647f5bb-cfd4-40ed-bcda-b60e7b4ca60c")
                        },
                        new
                        {
                            Id = new Guid("49207441-80d6-4d23-b745-45e9cc039bed"),
                            Answer = "It's really cool here!",
                            Question = "Any comments on how you find working for Carved Rock?",
                            SurveyResponseId = new Guid("8647f5bb-cfd4-40ed-bcda-b60e7b4ca60c")
                        },
                        new
                        {
                            Id = new Guid("9be532e2-8830-4f96-9a57-11c126c50620"),
                            Answer = "More than 5 years",
                            Question = "How long have you worked at Carved Rock?",
                            SurveyResponseId = new Guid("5e18547a-dd7b-444a-afb9-87431a1b4db1")
                        },
                        new
                        {
                            Id = new Guid("43f02312-c461-4558-916f-af9b35b9ccce"),
                            Answer = "No",
                            Question = "Do you enjoy working at Carved Rock?",
                            SurveyResponseId = new Guid("5e18547a-dd7b-444a-afb9-87431a1b4db1")
                        },
                        new
                        {
                            Id = new Guid("36a2048c-fe89-42e7-834a-0be5c21354b7"),
                            Answer = "My computer is really slow",
                            Question = "Any comments on how you find working for Carved Rock?",
                            SurveyResponseId = new Guid("5e18547a-dd7b-444a-afb9-87431a1b4db1")
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PossibleAnswers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("CustomerSurveyQuestions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9901"),
                            Answer = "",
                            PossibleAnswers = "Less than 1 year|1-5 years|More than 5 years",
                            Question = "How long have you worked at Carved Rock?",
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        },
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9902"),
                            Answer = "",
                            PossibleAnswers = "Yes|No|Sometimes",
                            Question = "Do you enjoy working at Carved Rock?",
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        },
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9903"),
                            Answer = "",
                            PossibleAnswers = "",
                            Question = "Any comments on how you find working for Carved Rock?",
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyAnswer", b =>
                {
                    b.HasOne("Globomantics.Survey.Models.CustomerSurveyResponse", "SurveyResponse")
                        .WithMany("Answers")
                        .HasForeignKey("SurveyResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyResponse");
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyQuestion", b =>
                {
                    b.HasOne("Globomantics.Survey.Models.CustomerSurvey", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurvey", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurveyResponse", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
